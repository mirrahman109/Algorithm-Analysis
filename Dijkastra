#include<bits/stdc++.h>
using namespace std;
#define forn(i, n) for (int i = 0; i < int(n); i++)
#define ll long long
const int N = 1e5 + 10;
const int INF = 1e9 + 10;

vector<pair<int,int>> g[N];

void dijkastra(int source){
    vector<int>vis(N,0);
    vector<int>dist(N,INF);

    set<pair<int,int>>st;

    st.insert({0,source});
    dist[source] =  0;

    while(st.size() > 0){
        auto node = *st.begin();
        int v_dist = node.first;
        int v = node.second;
        st.erase(st.begin());
        if(vis[v]) continue; 
        vis[v] = 1;
        for(auto child : g[v]){
            int child_v = child.first;
            int wt = child.second;
            if(dist[v] + wt < dist[child_v]){
                dist[child_v] = dist[v] + wt;
                 st.insert({dist[child_v],child_v}); 
            }
        }
    }


}


int32_t main() {
ios_base::sync_with_stdio(0);
cin.tie(0);
int n, m;
cin >> n >> m;
while(m--){
    int x, y, wt;
    cin >> x >> y >> wt;
    g[x].push_back({y,wt});
}



return 0;
}
